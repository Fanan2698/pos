# create layer from docker image
FROM python:3.6-alpine

# create user on image
RUN adduser -D flask-boilerplate

# create working directory on image
WORKDIR /home/flask-boilerplate

RUN apk add gcc
RUN apk add --no-cache libressl-dev musl-dev libffi-dev linux-headers

# process copy to install requirements file to image
# copy file to image
COPY requirements.txt requirements.txt 
RUN python -m venv venv # create virtualenv inside image
RUN venv/bin/pip install -r requirements.txt # install requirements.txt using pip from virtualenv
RUN venv/bin/pip install gunicorn # install gunicorn separate with requirements.txt
RUN venv/bin/pip install cryptography

# process copy app/ folder to image
COPY app app
# process copy migration/ folder to image
#COPY migrations migrations 
# process copy file on root directory
COPY babel.cfg boot.sh config.py setup.py tests.py ./
# make boot.sh executeable
RUN chmod +x boot.sh

# change owner of WORKDIR to flask-base user
RUN chown -R flask-boilerplate:flask-boilerplate ./
# default user
USER flask-boilerplate

# expose port are can using from serving file
EXPOSE 5000

# spesified command can be executed when container started
ENTRYPOINT ["./boot.sh"]
